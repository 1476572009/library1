<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.lanqiao.taru.library.dao.BookDao">

    <!--// 查询图书列表-->
    <!--public List<Book> queryList();-->
    <resultMap id="query" type="org.lanqiao.taru.library.model.Book">
        <id property="bookId" column="BOOK_ID" jdbcType="VARCHAR"></id>
        <result property="bookCode" column="BOOK_CODE" jdbcType="VARCHAR" ></result>
        <result property="bookName" column="BOOK_NAME" jdbcType="VARCHAR"></result>
        <result property="bookAuthor" column="BOOK_AUTHOR" jdbcType="VARCHAR"></result>
        <result property="bookCategoryId" column="BOOK_CATEGORY_ID" jdbcType="VARCHAR"></result>
        <!--<result property="bookPublishTime" column="BOOK_PUBLISH_TIME" jdbcType="VARCHAR"></result>-->
        <result property="bookPrice" column="BOOK_PRICE" jdbcType="VARCHAR"></result>
        <result property="bookStockSize" column="BOOK_STOCK_SIZE" jdbcType="VARCHAR"></result>
        <result property="bookComment" column="BOOK_COMMENT" jdbcType="VARCHAR"></result>
        <result property="bookStatus" column="BOOK_STATUS" jdbcType="TINYINT"></result>

    </resultMap>
    <select id="queryList" resultMap="query">
        select * from books
    </select>

    <!--/**-->
    <!--* 多条件查询-->
    <!--* @param bookName 根据书名-->
    <!--* @param bookAuthor 根据作者名-->
    <!--*二者随意组合 可空-->
    <!--* @return-->
    <!--*/-->
    <!--public List<Book> queryByterm(@Param("bookName") String bookName, @Param("bookAuthor") String bookAuthor);-->
    <select id="queryByterm" resultMap="query">
        select * from books
        <where>
            <if test="bookName!=null  and bookName!=''">
                and book_name like #{bookName}
            </if>
            <if test="bookAuthor!=null  and bookAuthor!=' '">
                and BOOK_AUTHOR like #{bookAuthor}
            </if>
        </where>
    </select>

    <!--//  查询榜单-->

    <select id="queryBytop" resultType="org.lanqiao.taru.library.vo.TopVo">
        select b.BOOK_NAME booksName,c2.bookId,c2.count
          from books b left join
            (select count(*) count ,c.COLLECT_BOOK_ID bookId
                from collect c group by c.COLLECT_BOOK_ID
                ORDER BY count DESC)
          c2 on b.BOOK_ID=c2.bookId LIMIT 0,10
    </select>
    <!--/**-->
    <!--* 查询图书详情-->
    <!--* @param bookId 根据图书id查询图书信息-->
    <!--* @return-->
    <!--*/-->
    <!--public Book queryDetail(String bookId);-->
    <select id="queryDetail" resultMap="query">
        select * from books where book_id=#{bookId}
    </select>
    <!--/**-->
    <!--* 图书预览-->
    <!--* @param articleBookId-->
    <!--* @param articleId-->
    <!--* @return-->
    <!--*/-->
    <resultMap id="reviewMap" type="org.lanqiao.taru.library.vo.ArticleVo">
        <id property="articleId" column="ARTICLEID" jdbcType="VARCHAR"></id>
        <id property="articleTitle" column="ARTICLE_TITLE" jdbcType="VARCHAR"></id>
        <result property="articleBody" column="ARTICLE_BODY" jdbcType="VARCHAR" ></result>
        <result property="articleNum" column="ARTICLENUM" jdbcType="VARCHAR"></result>
        <result property="articleBookId" column="ARTICLE_BOOK_ID" jdbcType="VARCHAR"></result>

    </resultMap>
    <select id="review" resultMap="reviewMap">
       select *  from article where ARTICLE_BOOK_ID =#{articleBookId} and ARTICLEID=#{articleId}
    </select>

<!--模糊查询-->
    <select id="selectBooksLike" resultMap="query">
        <bind name="bookName" value="'%' + _parameter+ '%'" />
        SELECT * FROM books
        WHERE book_name LIKE #{bookName}
    </select>


    <!--根据类别id查询书籍-->

    <resultMap id="queryCategroyMap" type="org.lanqiao.taru.library.vo.CategroyVo">
        <id property="bookId" column="BOOK_ID" jdbcType="VARCHAR"></id>
        <result property="bookCode" column="BOOK_CODE" jdbcType="VARCHAR" ></result>
        <result property="bookName" column="BOOK_NAME" jdbcType="VARCHAR"></result>
        <result property="bookAuthor" column="BOOK_AUTHOR" jdbcType="VARCHAR"></result>
        <result property="bookCategoryId" column="BOOK_CATEGORY_ID" jdbcType="VARCHAR"></result>
        <!--<result property="bookPublishTime" column="BOOK_PUBLISH_TIME" jdbcType="VARCHAR"></result>-->
        <result property="bookPrice" column="BOOK_PRICE" jdbcType="VARCHAR"></result>
        <result property="bookStockSize" column="BOOK_STOCK_SIZE" jdbcType="VARCHAR"></result>
        <result property="bookComment" column="BOOK_COMMENT" jdbcType="VARCHAR"></result>
        <result property="bookStatus" column="BOOK_STATUS" jdbcType="TINYINT"></result>
        <result property="categroyName" column="CATEGORY_NAME" jdbcType="VARCHAR"></result>
    </resultMap>
    <select id="queryBookByCategroyId" resultMap="queryCategroyMap">
        select  c.CATEGORY_NAME,b.* from category  c
        left join books b on c.CATEGORY_ID=b.BOOK_CATEGORY_ID where c.CATEGORY_ID=#{categroyId}
    </select>


    <!--根据bookId查询书籍评论-->
    <resultMap id="queryReviewMap" type="org.lanqiao.taru.library.model.Review">
            <id property="reviewId" column="father_review_id" jdbcType="VARCHAR"></id>
            <result property="reviewUserId" column="father_review_user_id" jdbcType="VARCHAR"></result>
            <result property="reviewBookId" column="father_review_book_id" jdbcType="VARCHAR"></result>
            <result property="reviewComment" column="father_review_comment" jdbcType="VARCHAR"></result>
            <!--<result property="reviewFatherId" column="father_review_father_id" jdbcType="VARCHAR"></result>-->
            <result property="reviewStatus" column="father_review_status" jdbcType="VARCHAR"></result>
            <collection property="reviews" ofType="org.lanqiao.taru.library.model.Review">
                <id property="reviewId" column="REVIEW_ID" jdbcType="VARCHAR"></id>
                <result property="reviewUserId" column="REVIEW_USER_ID" jdbcType="VARCHAR"></result>
                <result property="reviewBookId" column="RIVEW_BOOK_ID" jdbcType="VARCHAR"></result>
                <result property="reviewComment" column="REVIEW_COMMENT" jdbcType="VARCHAR"></result>
                <result property="reviewFatherId" column="REVIEW_FATHER_ID" jdbcType="VARCHAR"></result>
                <result property="reviewStatus" column="REVIEW_STATUS" jdbcType="VARCHAR"></result>

            </collection>
    </resultMap>

    <select id="queryReview" resultMap="queryReviewMap">


-- select
--
--         father.REVIEW_ID father_review_id,
--         father.RIVEW_BOOK_ID father_review_book_id,
--         father.REVIEW_COMMENT father_review_comment,
--         father.REVIEW_STATUS father_review_status,
--         father.REVIEW_USER_ID father_review_user_id,
--         son.*
--         from review father
--         left join review son
--         on  father.REVIEW_ID=son.REVIEW_FATHER_ID where father.RIVEW_BOOK_ID

       select
        father.REVIEW_ID father_review_id,
        father.RIVEW_BOOK_ID father_review_book_id,
        father.REVIEW_COMMENT father_review_comment,
        father.REVIEW_STATUS father_review_status,
        father.REVIEW_USER_ID father_review_user_id,
        son.*
        from review son
        left join review father
        on  father.REVIEW_ID=son.REVIEW_FATHER_ID where father.RIVEW_BOOK_ID=#{bookId}
    </select>
</mapper>